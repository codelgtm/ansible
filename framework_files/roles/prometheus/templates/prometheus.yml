global:
  external_labels:
    replica: A

  scrape_interval:     10s # Set the scrape interval to every 15 seconds. Default is every 1 minute.
  evaluation_interval: 10s # Evaluate rules every 15 seconds. The default is every 1 minute.
  # scrape_timeout is set to the global default (10s).

# Alertmanager configuration
alerting:
  alert_relabel_configs:
  - source_labels: [replica]
    regex: "[AB]"
    target_label: replica
  alertmanagers:
  - basic_auth:
      username: alertmanager
      password: {{ general_password }}
    scheme: https
    tls_config:
      insecure_skip_verify: true
    static_configs:
    - targets:
       - "{{ fqhnA }}:9093"
       - "{{ fqhnB }}:9093"

# Load rules once and periodically evaluate them according to the global 'evaluation_interval'.
rule_files:
   - "rules/test-rules.yml"

# A scrape configuration containing exactly one endpoint to scrape:
# Here it's Prometheus itself.
scrape_configs:
  # The job name is added as a label `job=<job_name>` to any timeseries scraped from this config.
  - job_name: 'prometheus'

    # metrics_path defaults to '/metrics'
    # scheme defaults to 'http'.

    basic_auth:
      username: prometheus
      password: {{ general_password }}
    scheme: https
    tls_config:
      insecure_skip_verify: true
    static_configs:
            - targets: ['{{ fqhnA }}:9090', '{{ fqhnB }}:9090']

  - job_name: 'alertmanager'
    basic_auth:
      username: alertmanager
      password: {{ general_password }}
    scheme: https
    tls_config:
      insecure_skip_verify: true
    static_configs:
    - targets: ['{{ fqhnA }}:9093', '{{ fqhnB }}:9093']

  - job_name: 'pushgateway'
    honor_labels: true
    static_configs:
    - targets: ['{{ pushgateway }}:9091']
